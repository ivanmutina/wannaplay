{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport API from \"../api\";\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      posts: [],\n      selectedPost: {},\n      searchQuery: \"\",\n      joinClicked: false,\n      cancelClicked: false,\n      userData: {},\n      isAuthor: \"\"\n    };\n  },\n  mounted() {\n    // podaci iz localStorage\n    const userFromLocalStorage = localStorage.getItem(\"user\");\n    if (userFromLocalStorage) {\n      // pretvori string u JSON objekt\n      this.userData = JSON.parse(userFromLocalStorage);\n    }\n  },\n  // dohvati sve postove\n  async created() {\n    this.posts = await API.getAllPost();\n  },\n  methods: {\n    async modal(postId) {\n      try {\n        // dohvati post detalje preko API\n        const post = await API.getPostByID(postId);\n        // postavim 'selectedPost' na dobivene detalje posta\n        this.selectedPost = post;\n\n        // je li trenutni user i author\n        this.isAuthor = this.selectedPost.author === this.userData.username;\n\n        // pokaž modal, jQuery\n        $(\"#exampleModal\").modal(\"show\");\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    formatDate(created) {\n      // formatiram created u dd.mm.yyyy\n      return new Date(created).toLocaleDateString(\"hr-HR\");\n    },\n    editPost(postId) {\n      // preusmjeri na stranicu edit-event s odgovarajućim ID\n      this.$router.push({\n        name: \"edit-event\",\n        params: {\n          id: postId\n        }\n      });\n    },\n    async removePost(postId) {\n      const response = await API.deletePost(postId);\n      this.$router.push({\n        name: \"home\"\n      });\n      window.location.reload();\n    },\n    // search\n    async refreshPosts() {\n      const search = this.searchQuery.trim();\n      if (search === \"\") {\n        // ako je unos prazan, dohvati sve postove\n        this.posts = await API.getAllPost();\n      } else {\n        // ako postoji unos, dohvatite postove (veliko malo slovo nebitno)\n        const filteredPosts = this.posts.filter(post => post.title.toLowerCase().includes(search.toLowerCase()));\n        this.posts = filteredPosts;\n      }\n    },\n    onSearch() {\n      // osvjezi prikaz postova cim upisem nesto\n      this.refreshPosts();\n    },\n    async joinButton() {\n      // ako >0 i niti jedan gumb nije pritisnut\n      if (this.selectedPost.players > 0 && !this.joinClicked && !this.cancelClicked) {\n        this.selectedPost.players--;\n        this.joinClicked = true;\n        try {\n          // i na backend\n          await API.updatePlaces(this.selectedPost._id, this.selectedPost.players);\n        } catch (err) {\n          console.log(\"Error: \", err);\n        }\n      }\n    },\n    async cancelButton() {\n      if (this.selectedPost.players > 0 && this.joinClicked && !this.cancelClicked) {\n        this.selectedPost.players++;\n        this.cancelClicked = true;\n        try {\n          // i na backend\n          await API.updatePlaces(this.selectedPost._id, this.selectedPost.players);\n        } catch (err) {\n          console.log(\"Error: \", err);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["API","name","data","posts","selectedPost","searchQuery","joinClicked","cancelClicked","userData","isAuthor","mounted","userFromLocalStorage","localStorage","getItem","JSON","parse","created","getAllPost","methods","modal","postId","post","getPostByID","author","username","$","error","console","formatDate","Date","toLocaleDateString","editPost","$router","push","params","id","removePost","response","deletePost","window","location","reload","refreshPosts","search","trim","filteredPosts","filter","title","toLowerCase","includes","onSearch","joinButton","players","updatePlaces","_id","err","log","cancelButton"],"sources":["C:\\Users\\imutina\\Projects\\wannaplay\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"pb-5 main\">\r\n    <div class=\"container mt-5\">\r\n      <!-- prvi dio -->\r\n      <div class=\"row mb-4 pb-2\">\r\n        <div class=\"col-md-8\">\r\n          <div class=\"text-md-start\">\r\n            <h3 class=\"title mb-3 desc\">Find the perfect match</h3>\r\n            <!-- search -->\r\n            <div class=\"col-3\">\r\n              <form class=\"form-inline mt-4\">\r\n                <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" v-model=\"searchQuery\" @input=\"onSearch\" />\r\n              </form>\r\n            </div>\r\n            <!-- /search -->\r\n            <p class=\"mb-0 mt-4 desc\">Do you want to play football, basketball, or any other sport but don't have anyone to play with?</p>\r\n            <p class=\"desc\">Or do you just need a few more players? Find a team and start playing TODAY!</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- /prvi dio -->\r\n\r\n      <!-- kartica -->\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-4 col-md-6 col-12 mt-1 pt-2\" v-for=\"post in posts\" :key=\"post._id\">\r\n          <div class=\"card border-0 bg-light rounded shadow\">\r\n            <div class=\"card-body p-4\">\r\n              <span class=\"badge rounded-pill float-md-end mb-3 mb-sm-0\">{{ post.gender }}</span>\r\n              <h5>{{ post.title }}</h5>\r\n              <div class=\"mt-3\">\r\n                <span> {{ post.description.substring(0, 40) + \"...\" }}</span>\r\n                <span class=\"d-block mt-1\"><i class=\"far fa-calendar-alt\" aria-hidden=\"true\"></i> {{ post.date }}</span>\r\n                <span class=\"d-block\"><i class=\"fas fa-map-marker-alt\" aria-hidden=\"true\"></i> {{ post.place }}</span>\r\n              </div>\r\n              <!-- gumb -->\r\n              <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n                <button type=\"button\" class=\"btn\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" @click=\"modal(post._id)\">View details</button>\r\n                <small class=\"created-text pt-4\">Created {{ formatDate(post.created) }}</small>\r\n              </div>\r\n              <!-- /gumb -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- /kartica -->\r\n      </div>\r\n    </div>\r\n\r\n    <!-- modal -->\r\n    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <!-- modal header -->\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{ selectedPost.title }}</h5>\r\n            <span class=\"badge rounded-pill float-md-start me-3 ms-3 mb-3 mb-sm-0 text-start\">{{ selectedPost.gender }}</span>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <!-- modal body -->\r\n          <div class=\"modal-body\">\r\n            <p class=\"text-start\"><i class=\"fas fa-info-circle\"></i> {{ selectedPost.description }}</p>\r\n            <p class=\"text-start\">\r\n              <i class=\"far fa-calendar-alt\"></i> The event will take place on <span class=\"post-span\">{{ selectedPost.date }} </span> at <span class=\"post-span\">{{ selectedPost.time }}</span> in\r\n              <span class=\"post-span\">{{ selectedPost.place }}.</span> Places left: <span class=\"post-span\">{{ selectedPost.players }}</span>\r\n            </p>\r\n\r\n            <p class=\"text-start\"><i class=\"fas fa-phone\"></i> +385 958128238</p>\r\n            <small> For more detailed instructions, please contact the organizer.</small>\r\n          </div>\r\n\r\n          <!-- modal footer -->\r\n          <div class=\"modal-footer\">\r\n            <button v-if=\"isAuthor\" class=\"red-btn\" @click=\"removePost(selectedPost._id)\">Delete</button>\r\n            <button v-if=\"isAuthor\" class=\"blue-btn\" @click=\"editPost(selectedPost._id)\">Edit</button>\r\n\r\n            <button v-if=\"!isAuthor\" class=\"red-btn\" @click=\"cancelButton\">Cancel</button>\r\n            <button v-if=\"!isAuthor\" class=\"blue-btn\" @click=\"joinButton\">Join</button>\r\n          </div>\r\n          <!-- /modal footer -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- /modal -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport API from \"../api\";\r\n\r\nexport default {\r\n  name: \"Home\",\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      selectedPost: {},\r\n      searchQuery: \"\",\r\n      joinClicked: false,\r\n      cancelClicked: false,\r\n      userData: {},\r\n      isAuthor: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    // podaci iz localStorage\r\n    const userFromLocalStorage = localStorage.getItem(\"user\");\r\n\r\n    if (userFromLocalStorage) {\r\n      // pretvori string u JSON objekt\r\n      this.userData = JSON.parse(userFromLocalStorage);\r\n    }\r\n  },\r\n  // dohvati sve postove\r\n  async created() {\r\n    this.posts = await API.getAllPost();\r\n  },\r\n  methods: {\r\n    async modal(postId) {\r\n      try {\r\n        // dohvati post detalje preko API\r\n        const post = await API.getPostByID(postId);\r\n        // postavim 'selectedPost' na dobivene detalje posta\r\n        this.selectedPost = post;\r\n\r\n        // je li trenutni user i author\r\n        this.isAuthor = this.selectedPost.author === this.userData.username;\r\n\r\n        // pokaž modal, jQuery\r\n        $(\"#exampleModal\").modal(\"show\");\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    formatDate(created) {\r\n      // formatiram created u dd.mm.yyyy\r\n      return new Date(created).toLocaleDateString(\"hr-HR\");\r\n    },\r\n    editPost(postId) {\r\n      // preusmjeri na stranicu edit-event s odgovarajućim ID\r\n      this.$router.push({ name: \"edit-event\", params: { id: postId } });\r\n    },\r\n    async removePost(postId) {\r\n      const response = await API.deletePost(postId);\r\n      this.$router.push({ name: \"home\" });\r\n      window.location.reload();\r\n    },\r\n    // search\r\n    async refreshPosts() {\r\n      const search = this.searchQuery.trim();\r\n\r\n      if (search === \"\") {\r\n        // ako je unos prazan, dohvati sve postove\r\n        this.posts = await API.getAllPost();\r\n      } else {\r\n        // ako postoji unos, dohvatite postove (veliko malo slovo nebitno)\r\n        const filteredPosts = this.posts.filter((post) => post.title.toLowerCase().includes(search.toLowerCase()));\r\n        this.posts = filteredPosts;\r\n      }\r\n    },\r\n    onSearch() {\r\n      // osvjezi prikaz postova cim upisem nesto\r\n      this.refreshPosts();\r\n    },\r\n    async joinButton() {\r\n      // ako >0 i niti jedan gumb nije pritisnut\r\n      if (this.selectedPost.players > 0 && !this.joinClicked && !this.cancelClicked) {\r\n        this.selectedPost.players--;\r\n        this.joinClicked = true;\r\n\r\n        try {\r\n          // i na backend\r\n          await API.updatePlaces(this.selectedPost._id, this.selectedPost.players);\r\n        } catch (err) {\r\n          console.log(\"Error: \", err);\r\n        }\r\n      }\r\n    },\r\n\r\n    async cancelButton() {\r\n      if (this.selectedPost.players > 0 && this.joinClicked && !this.cancelClicked) {\r\n        this.selectedPost.players++;\r\n        this.cancelClicked = true;\r\n\r\n        try {\r\n          // i na backend\r\n          await API.updatePlaces(this.selectedPost._id, this.selectedPost.players);\r\n        } catch (err) {\r\n          console.log(\"Error: \", err);\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n@import url(\"https://fonts.googleapis.com/css?family=Poppins:400,500,600,700,800,900\");\r\n\r\nbody {\r\n  font-family: \"Poppins\", sans-serif;\r\n  font-weight: 300;\r\n  font-size: 15px;\r\n  line-height: 1.7;\r\n  background-color: #1f2029;\r\n  overflow: hidden;\r\n}\r\np {\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 1.7;\r\n}\r\n.modal-body p {\r\n  color: rgb(20, 19, 19);\r\n}\r\n\r\n/* da je moguce scrollat */\r\n.main {\r\n  overflow-y: auto;\r\n  max-height: 90vh;\r\n}\r\n\r\n/* prvi dio - opis */\r\n.desc {\r\n  color: rgb(255, 254, 254);\r\n}\r\n\r\n/* na kartici */\r\n.rounded-pill {\r\n  background-color: #102770;\r\n}\r\n\r\n.created-text {\r\n  display: inline-block;\r\n  margin-left: auto;\r\n  font-size: 12px;\r\n  color: #c4c3ca;\r\n}\r\n\r\n/* gumb na kartici*/\r\n.card .btn {\r\n  position: relative;\r\n  font-weight: 550;\r\n  font-size: 15px;\r\n  line-height: 2;\r\n  height: 50px;\r\n  width: 150px;\r\n  white-space: nowrap;\r\n  transition: all 200ms linear;\r\n  border-radius: 5px;\r\n  letter-spacing: 1px;\r\n  cursor: pointer;\r\n  border: none;\r\n  background-color: #102770;\r\n  color: #ffeba7;\r\n  box-shadow: 0 12px 35px 0 rgba(16, 39, 112, 0.25);\r\n}\r\n.card .btn:active,\r\n.card .btn:focus {\r\n  background-color: #ffeba7;\r\n  color: #102770;\r\n  box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\r\n}\r\n.card .btn:hover {\r\n  background-color: #ffeba7;\r\n  color: #102770;\r\n  box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\r\n}\r\n\r\n/* modal */\r\n.red-btn {\r\n  font-weight: 420;\r\n  letter-spacing: 1px;\r\n  border: none;\r\n  font-size: 16px;\r\n  width: 80px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  transition: all 200ms linear;\r\n  color: #ffeba7;\r\n  background-color: #832a45;\r\n  box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\r\n}\r\n.blue-btn {\r\n  font-weight: 500;\r\n  width: 80px;\r\n  letter-spacing: 1px;\r\n  border: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  transition: all 200ms linear;\r\n  background-color: #102770;\r\n  color: #ffeba7;\r\n  box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\r\n}\r\n.blue-btn:hover,\r\n.red-btn:hover {\r\n  color: #102770;\r\n  background-color: rgb(249, 244, 244);\r\n}\r\n\r\n.post-span {\r\n  color: #102770;\r\n  font-weight: 500;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}