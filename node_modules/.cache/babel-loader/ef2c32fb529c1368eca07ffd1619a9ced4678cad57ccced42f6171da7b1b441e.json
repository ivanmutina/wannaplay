{"ast":null,"code":"export default {};","map":{"version":3,"names":[],"sources":["C:\\Users\\imutina\\Projects\\wannaplay\\src\\views\\404.vue"],"sourcesContent":["<template>\r\n  <template>\r\n    <div class=\"main\">\r\n      <div class=\"container mt-5\">\r\n        <!-- First part -->\r\n        <div class=\"row mb-4 pb-2\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"text-md-start\">\r\n              <h3 class=\"title mb-3 desc\">Account</h3>\r\n              <p class=\"mb-0 mt-4 desc\">You can change the password or delete your account.</p>\r\n              <p class=\"desc\">Be aware that deleting the account will also delete all the posted events.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- /First part -->\r\n      </div>\r\n    </div>\r\n  </template>\r\n\r\n  <script>\r\n    import axios from \"axios\";\r\n    import { Auth } from \"@/services\";\r\n    import { v4 as uuidv4 } from \"uuid\";\r\n\r\n    export default {\r\n      data() {\r\n        return {\r\n          old_password: \"\",\r\n          new_password: \"\",\r\n          keyword: \"\",\r\n          keywordInput: \"\",\r\n        };\r\n      },\r\n      created() {\r\n        this.generateKeyword();\r\n      },\r\n      methods: {\r\n        async changePassword() {\r\n          // dohvati trenutnog korisnika\r\n          const user = Auth.getUser();\r\n\r\n          // stara ne smije bit ista novoj\r\n          if (this.old_password === this.new_password) {\r\n            window.alert(\"New password must be different from the old password.\");\r\n            return;\r\n          }\r\n\r\n          // provjera stare sifre i autentifikacija\r\n          try {\r\n            await axios.post(\"/auth\", {\r\n              username: user.username,\r\n              password: this.old_password,\r\n            });\r\n\r\n            // ako valja, promijeni šifru (salje i header zbog middleware)\r\n            await axios.patch(\r\n              \"/user\",\r\n              {\r\n                old_password: this.old_password,\r\n                new_password: this.new_password,\r\n              },\r\n              {\r\n                headers: { Authorization: `Bearer ${user.token}` },\r\n              }\r\n            );\r\n\r\n            window.alert(\"Password successfully changed!\");\r\n            this.$router.push({ name: \"home\" });\r\n          } catch (err) {\r\n            // ako ne valja\r\n            window.alert(\"Incorrect old password.\");\r\n          }\r\n        },\r\n        async generateKeyword() {\r\n          const generatedKeyword = uuidv4().substring(0, 6); // Generirajte uuid i uzmite prvih 6 znakova\r\n          this.keyword = generatedKeyword; // Postavite generirani ključ u deleteKeyword\r\n        },\r\n        async deleteAcc() {\r\n          if (this.keyword !== this.keywordInput) {\r\n            window.alert(\"Incorrect keyword. Account is not deleted.\");\r\n            return;\r\n          }\r\n\r\n          const user = Auth.getUser();\r\n          try {\r\n            // kodiram ime da mi posebni znakovi ne stvaraju problem\r\n            const encodedUsername = encodeURIComponent(user.username);\r\n\r\n            const headers = {\r\n              Authorization: `Bearer ${user.token}`,\r\n            };\r\n\r\n            // posalji zahtjeva za brisanje profila na backend\r\n            const response = await axios.delete(`/user/${encodedUsername}`, { headers });\r\n\r\n            if (response.data.success) {\r\n              window.alert(\"Account successfully deleted.\");\r\n              Auth.logout();\r\n              this.$router.go();\r\n            } else {\r\n              window.alert(\"Failed to delete account.\");\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Error deleting account:\", error);\r\n            window.alert(\"Failed to delete account.\");\r\n          }\r\n        },\r\n      },\r\n    };\r\n  </script>\r\n\r\n  <style scoped>\r\n    @import url(\"https://fonts.googleapis.com/css?family=Poppins:400,500,600,700,800,900\");\r\n\r\n    body {\r\n      font-family: \"Poppins\", sans-serif;\r\n      font-size: 15px;\r\n      line-height: 1.7;\r\n      background-color: #1f2029;\r\n      overflow: hidden;\r\n    }\r\n    small {\r\n      color: white;\r\n    }\r\n\r\n    p {\r\n      font-family: \"Poppins\", sans-serif;\r\n      font-weight: 400;\r\n      font-size: 16px;\r\n      line-height: 1.7;\r\n      color: white;\r\n    }\r\n\r\n    h4 {\r\n      color: white;\r\n    }\r\n\r\n    a {\r\n      cursor: pointer;\r\n      transition: all 200ms linear;\r\n    }\r\n    a:hover {\r\n      text-decoration: none;\r\n    }\r\n\r\n    .section {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    .full-height {\r\n      min-height: 100vh;\r\n    }\r\n    .card-wrap {\r\n      width: 440px;\r\n      max-width: 100%;\r\n      height: 400px;\r\n      perspective: 800px;\r\n      margin-bottom: 60px;\r\n    }\r\n    .card-wrapper {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    .card {\r\n      width: 100%;\r\n      height: 100%;\r\n      background-color: #2a2b38;\r\n\r\n      border-radius: 6px;\r\n      left: 0;\r\n      top: 0;\r\n    }\r\n\r\n    .center-wrap {\r\n      position: absolute;\r\n      width: 100%;\r\n      padding: 0 35px;\r\n      top: 50%;\r\n      left: 0;\r\n      transform: translate3d(0, -50%, 35px) perspective(100px);\r\n      z-index: 20;\r\n      display: block;\r\n    }\r\n\r\n    .form-group {\r\n      position: relative;\r\n      display: block;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n    .form-style {\r\n      padding: 13px 20px;\r\n      padding-left: 55px;\r\n      height: 48px;\r\n      width: 100%;\r\n      font-weight: 500;\r\n      border-radius: 4px;\r\n      font-size: 14px;\r\n      line-height: 22px;\r\n      letter-spacing: 0.5px;\r\n      outline: none;\r\n      color: #c4c3ca;\r\n      background-color: #1f2029;\r\n      border: none;\r\n      box-shadow: 0 4px 8px 0 rgba(21, 21, 21, 0.2);\r\n    }\r\n    .form-style:focus,\r\n    .form-style:active {\r\n      border: none;\r\n      outline: none;\r\n      box-shadow: 0 4px 8px 0 rgba(21, 21, 21, 0.2);\r\n    }\r\n    .input-icon {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 17px;\r\n      font-size: 24px;\r\n      line-height: 48px;\r\n      text-align: left;\r\n      color: #ffeba7;\r\n    }\r\n\r\n    .card .btn {\r\n      position: relative;\r\n      font-weight: 550;\r\n      font-size: 15px;\r\n      line-height: 2;\r\n      height: 50px;\r\n      width: 150px;\r\n      white-space: nowrap;\r\n      transition: all 200ms linear;\r\n      border-radius: 5px;\r\n      letter-spacing: 1px;\r\n      cursor: pointer;\r\n      border: none;\r\n      background-color: #102770;\r\n      color: #ffeba7;\r\n      box-shadow: 0 12px 35px 0 rgba(16, 39, 112, 0.25);\r\n    }\r\n    .card .btn:active,\r\n    .card .btn:focus {\r\n      background-color: #ffeba7;\r\n      color: #102770;\r\n      box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\r\n    }\r\n    .card .btn:hover {\r\n      background-color: #ffeba7;\r\n      color: #102770;\r\n      box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\r\n    }\r\n  </style>\r\n</template>\r\n\r\n<script>\r\nexport default {};\r\n</script>\r\n"],"mappings":"AA8PA,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}