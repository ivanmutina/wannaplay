{"ast":null,"code":"// za kontakt sa serverom\nimport axios from \"axios\";\nconst url = \"http://localhost:3000/api/post\";\nexport default class API {\n  // uhvati sve postove sa servera\n  static async getAllPost() {\n    const res = await axios.get(url);\n    return res.data;\n  }\n  // uhvati jedan post uz ID\n  static async getPostByID(id) {\n    const res = await axios.get(`${url}/${id}`);\n    return res.data;\n  }\n  // ubaci post u bazu podataka\n  static async addPost(post) {\n    // Provjera je li korisnik prijavljen\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!user || !user.token) {\n      throw new Error(\"User not authenticated.\");\n    }\n    const res = await axios.post(url, post);\n    return res.data;\n  }\n  // ažuriraj post u bazi podataka\n  static async updatePost(id, post) {\n    const res = await axios.patch(`${url}/${id}`, post);\n    return res.data;\n  }\n  // obriši post\n  static async deletePost(id) {\n    const res = await axios.delete(`${url}/${id}`);\n    return res.data;\n  }\n}","map":{"version":3,"names":["axios","url","API","getAllPost","res","get","data","getPostByID","id","addPost","post","user","JSON","parse","localStorage","getItem","token","Error","updatePost","patch","deletePost","delete"],"sources":["C:/Users/imutina/Projects/wannaplay/src/api.js"],"sourcesContent":["// za kontakt sa serverom\r\nimport axios from \"axios\";\r\nconst url = \"http://localhost:3000/api/post\";\r\n\r\nexport default class API {\r\n  // uhvati sve postove sa servera\r\n  static async getAllPost() {\r\n    const res = await axios.get(url);\r\n    return res.data;\r\n  }\r\n  // uhvati jedan post uz ID\r\n  static async getPostByID(id) {\r\n    const res = await axios.get(`${url}/${id}`);\r\n    return res.data;\r\n  }\r\n  // ubaci post u bazu podataka\r\n  static async addPost(post) {\r\n    // Provjera je li korisnik prijavljen\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (!user || !user.token) {\r\n      throw new Error(\"User not authenticated.\");\r\n    }\r\n\r\n    const res = await axios.post(url, post);\r\n    return res.data;\r\n  }\r\n  // ažuriraj post u bazi podataka\r\n  static async updatePost(id, post) {\r\n    const res = await axios.patch(`${url}/${id}`, post);\r\n    return res.data;\r\n  }\r\n  // obriši post\r\n  static async deletePost(id) {\r\n    const res = await axios.delete(`${url}/${id}`);\r\n    return res.data;\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,GAAG,GAAG,gCAAgC;AAE5C,eAAe,MAAMC,GAAG,CAAC;EACvB;EACA,aAAaC,UAAUA,CAAA,EAAG;IACxB,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,GAAG,CAAC;IAChC,OAAOG,GAAG,CAACE,IAAI;EACjB;EACA;EACA,aAAaC,WAAWA,CAACC,EAAE,EAAE;IAC3B,MAAMJ,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,GAAI,IAAGO,EAAG,EAAC,CAAC;IAC3C,OAAOJ,GAAG,CAACE,IAAI;EACjB;EACA;EACA,aAAaG,OAAOA,CAACC,IAAI,EAAE;IACzB;IACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAI,CAACJ,IAAI,IAAI,CAACA,IAAI,CAACK,KAAK,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IAEA,MAAMb,GAAG,GAAG,MAAMJ,KAAK,CAACU,IAAI,CAACT,GAAG,EAAES,IAAI,CAAC;IACvC,OAAON,GAAG,CAACE,IAAI;EACjB;EACA;EACA,aAAaY,UAAUA,CAACV,EAAE,EAAEE,IAAI,EAAE;IAChC,MAAMN,GAAG,GAAG,MAAMJ,KAAK,CAACmB,KAAK,CAAE,GAAElB,GAAI,IAAGO,EAAG,EAAC,EAAEE,IAAI,CAAC;IACnD,OAAON,GAAG,CAACE,IAAI;EACjB;EACA;EACA,aAAac,UAAUA,CAACZ,EAAE,EAAE;IAC1B,MAAMJ,GAAG,GAAG,MAAMJ,KAAK,CAACqB,MAAM,CAAE,GAAEpB,GAAI,IAAGO,EAAG,EAAC,CAAC;IAC9C,OAAOJ,GAAG,CAACE,IAAI;EACjB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}