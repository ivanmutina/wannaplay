{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { Auth } from \"@/services\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport API from \"../api\";\nexport default {\n  data() {\n    return {\n      old_password: \"\",\n      new_password: \"\",\n      keyword: \"\",\n      keywordInput: \"\",\n      posts: []\n    };\n  },\n  async created() {\n    this.generateKeyword();\n    this.posts = await API.getAllPost();\n  },\n  methods: {\n    async changePassword() {\n      // dohvati trenutnog korisnika\n      const user = Auth.getUser();\n\n      // stara ne smije bit ista novoj\n      if (this.old_password === this.new_password) {\n        window.alert(\"New password must be different from the old password.\");\n        return;\n      }\n\n      // provjera stare sifre i autentifikacija\n      try {\n        await axios.post(\"/auth\", {\n          username: user.username,\n          password: this.old_password\n        });\n\n        // ako valja, promijeni šifru (salje i header zbog middleware)\n        await axios.patch(\"/user\", {\n          old_password: this.old_password,\n          new_password: this.new_password\n        }, {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        });\n        window.alert(\"Password successfully changed!\");\n        this.$router.push({\n          name: \"home\"\n        });\n      } catch (err) {\n        // ako ne valja\n        window.alert(\"Incorrect old password.\");\n      }\n    },\n    async generateKeyword() {\n      const generatedKeyword = uuidv4().substring(0, 6); // generiram uuid i uzmem 6 znakova\n      this.keyword = generatedKeyword;\n    },\n    async deleteAcc() {\n      if (this.keyword !== this.keywordInput) {\n        window.alert(\"Incorrect keyword. Account is not deleted.\");\n        return;\n      }\n      const user = Auth.getUser();\n      try {\n        // izbriši sve postove koji pripadaju korisniku\n        for (const post of this.posts) {\n          if (post.author === user.username) {\n            await API.deletePost(post._id);\n          }\n        }\n\n        // kodiram ime da mi posebni znakovi ne stvaraju problem\n        const encodedUsername = encodeURIComponent(user.username);\n        const headers = {\n          Authorization: `Bearer ${user.token}`\n        };\n\n        // posalji zahtjeva za brisanje profila na backend\n        const response = await axios.delete(`/user/${encodedUsername}`, {\n          headers\n        });\n        if (response.data.success) {\n          window.alert(\"Account successfully deleted.\");\n          Auth.logout();\n          this.$router.go();\n        } else {\n          window.alert(\"Failed to delete account.\");\n        }\n      } catch (error) {\n        console.error(\"Error deleting account:\", error);\n        window.alert(\"Failed to delete account.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Auth","v4","uuidv4","API","data","old_password","new_password","keyword","keywordInput","posts","created","generateKeyword","getAllPost","methods","changePassword","user","getUser","window","alert","post","username","password","patch","headers","Authorization","token","$router","push","name","err","generatedKeyword","substring","deleteAcc","author","deletePost","_id","encodedUsername","encodeURIComponent","response","delete","success","logout","go","error","console"],"sources":["C:\\Users\\imutina\\Projects\\wannaplay\\src\\views\\Account.vue"],"sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <div class=\"container mt-5\">\r\n      <!-- First part -->\r\n      <div class=\"row mb-4 pb-2\">\r\n        <div class=\"col-md-8\">\r\n          <div class=\"text-md-start\">\r\n            <h3 class=\"title mb-3 desc\">Account</h3>\r\n            <p class=\"mb-0 mt-4 desc\">You can change the password or delete your account.</p>\r\n            <p class=\"desc\">Be aware that deleting the account will also delete all the posted events.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- /First part -->\r\n\r\n      <!-- kartica -->\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 col-12\">\r\n          <!-- change pass form -->\r\n          <form @submit.prevent=\"changePassword\">\r\n            <div class=\"card-wrap mx-auto\">\r\n              <div class=\"card-wrapper\">\r\n                <div class=\"card\">\r\n                  <div class=\"center-wrap\">\r\n                    <div class=\"section text-center\">\r\n                      <small>To change your password, first enter the old password and then the new password.</small>\r\n                      <div class=\"form-group mt-4\">\r\n                        <input v-model=\"old_password\" type=\"password\" name=\"oldpass\" class=\"form-style\" placeholder=\"Old password\" autocomplete=\"off\" required />\r\n                        <i class=\"input-icon fas fa-unlock\"></i>\r\n                      </div>\r\n                      <div class=\"form-group mt-2\">\r\n                        <input v-model=\"new_password\" type=\"password\" name=\"newpass\" class=\"form-style\" placeholder=\"New password\" autocomplete=\"off\" required />\r\n                        <i class=\"input-icon fas fa-lock\"></i>\r\n                      </div>\r\n                      <button type=\"submit\" class=\"btn mt-4\">Change</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <!-- /change pass form -->\r\n        </div>\r\n\r\n        <div class=\"col-md-6 col-12\">\r\n          <!-- delete acc. form -->\r\n          <form @submit.prevent=\"deleteAcc\">\r\n            <div class=\"card-wrap mx-auto\">\r\n              <div class=\"card-wrapper\">\r\n                <div class=\"card\">\r\n                  <div class=\"center-wrap\">\r\n                    <div class=\"section text-center\">\r\n                      <small>To confirm account deletion, please type this random keyword '<span v-text=\"keyword\"></span>' down bellow.</small>\r\n                      <div class=\"form-group mt-4\">\r\n                        <input v-model=\"keywordInput\" type=\"text\" class=\"form-style\" placeholder=\"Keyword\" autocomplete=\"off\" required />\r\n                        <i class=\"input-icon fas fa-trash-alt\"></i>\r\n                      </div>\r\n                      <button type=\"submit\" class=\"btn mt-4\">Delete</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <!-- /delete acc form  -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { Auth } from \"@/services\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport API from \"../api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      old_password: \"\",\r\n      new_password: \"\",\r\n      keyword: \"\",\r\n      keywordInput: \"\",\r\n      posts: [],\r\n    };\r\n  },\r\n  async created() {\r\n    this.generateKeyword();\r\n    this.posts = await API.getAllPost();\r\n  },\r\n  methods: {\r\n    async changePassword() {\r\n      // dohvati trenutnog korisnika\r\n      const user = Auth.getUser();\r\n\r\n      // stara ne smije bit ista novoj\r\n      if (this.old_password === this.new_password) {\r\n        window.alert(\"New password must be different from the old password.\");\r\n        return;\r\n      }\r\n\r\n      // provjera stare sifre i autentifikacija\r\n      try {\r\n        await axios.post(\"/auth\", {\r\n          username: user.username,\r\n          password: this.old_password,\r\n        });\r\n\r\n        // ako valja, promijeni šifru (salje i header zbog middleware)\r\n        await axios.patch(\r\n          \"/user\",\r\n          {\r\n            old_password: this.old_password,\r\n            new_password: this.new_password,\r\n          },\r\n          {\r\n            headers: { Authorization: `Bearer ${user.token}` },\r\n          }\r\n        );\r\n\r\n        window.alert(\"Password successfully changed!\");\r\n        this.$router.push({ name: \"home\" });\r\n      } catch (err) {\r\n        // ako ne valja\r\n        window.alert(\"Incorrect old password.\");\r\n      }\r\n    },\r\n    async generateKeyword() {\r\n      const generatedKeyword = uuidv4().substring(0, 6); // generiram uuid i uzmem 6 znakova\r\n      this.keyword = generatedKeyword;\r\n    },\r\n    async deleteAcc() {\r\n      if (this.keyword !== this.keywordInput) {\r\n        window.alert(\"Incorrect keyword. Account is not deleted.\");\r\n        return;\r\n      }\r\n\r\n      const user = Auth.getUser();\r\n      try {\r\n        // izbriši sve postove koji pripadaju korisniku\r\n        for (const post of this.posts) {\r\n          if (post.author === user.username) {\r\n            await API.deletePost(post._id);\r\n          }\r\n        }\r\n\r\n        // kodiram ime da mi posebni znakovi ne stvaraju problem\r\n        const encodedUsername = encodeURIComponent(user.username);\r\n\r\n        const headers = {\r\n          Authorization: `Bearer ${user.token}`,\r\n        };\r\n\r\n        // posalji zahtjeva za brisanje profila na backend\r\n        const response = await axios.delete(`/user/${encodedUsername}`, { headers });\r\n\r\n        if (response.data.success) {\r\n          window.alert(\"Account successfully deleted.\");\r\n          Auth.logout();\r\n          this.$router.go();\r\n        } else {\r\n          window.alert(\"Failed to delete account.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error deleting account:\", error);\r\n        window.alert(\"Failed to delete account.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(\"https://fonts.googleapis.com/css?family=Poppins:400,500,600,700,800,900\");\r\n\r\nbody {\r\n  font-family: \"Poppins\", sans-serif;\r\n  font-size: 15px;\r\n  line-height: 1.7;\r\n  background-color: #1f2029;\r\n  overflow: hidden;\r\n}\r\nsmall {\r\n  color: white;\r\n}\r\na {\r\n  cursor: pointer;\r\n  transition: all 200ms linear;\r\n}\r\na:hover {\r\n  text-decoration: none;\r\n}\r\n.section {\r\n  width: 100%;\r\n  display: block;\r\n}\r\n.full-height {\r\n  min-height: 100vh;\r\n}\r\n.card-wrap {\r\n  width: 440px;\r\n  max-width: 100%;\r\n  height: 400px;\r\n  perspective: 800px;\r\n  margin-bottom: 60px;\r\n}\r\n.card-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.card {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #2a2b38;\r\n  border-radius: 6px;\r\n  left: 0;\r\n  top: 0;\r\n}\r\n.center-wrap {\r\n  position: absolute;\r\n  width: 100%;\r\n  padding: 0 35px;\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translate3d(0, -50%, 35px) perspective(100px);\r\n  z-index: 20;\r\n  display: block;\r\n}\r\n.form-group {\r\n  position: relative;\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.form-style {\r\n  padding: 13px 20px;\r\n  padding-left: 55px;\r\n  height: 48px;\r\n  width: 100%;\r\n  font-weight: 500;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n  letter-spacing: 0.5px;\r\n  outline: none;\r\n  color: #c4c3ca;\r\n  background-color: #1f2029;\r\n  border: none;\r\n  box-shadow: 0 4px 8px 0 rgba(21, 21, 21, 0.2);\r\n}\r\n.form-style:focus,\r\n.form-style:active {\r\n  border: none;\r\n  outline: none;\r\n  box-shadow: 0 4px 8px 0 rgba(21, 21, 21, 0.2);\r\n}\r\n.input-icon {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 17px;\r\n  font-size: 24px;\r\n  line-height: 48px;\r\n  text-align: left;\r\n  color: #ffeba7;\r\n}\r\n.card .btn {\r\n  position: relative;\r\n  font-weight: 550;\r\n  font-size: 15px;\r\n  line-height: 2;\r\n  height: 50px;\r\n  width: 150px;\r\n  white-space: nowrap;\r\n  transition: all 200ms linear;\r\n  border-radius: 5px;\r\n  letter-spacing: 1px;\r\n  cursor: pointer;\r\n  border: none;\r\n  background-color: #102770;\r\n  color: #ffeba7;\r\n  box-shadow: 0 12px 35px 0 rgba(16, 39, 112, 0.25);\r\n}\r\n.card .btn:active,\r\n.card .btn:focus {\r\n  background-color: #ffeba7;\r\n  color: #102770;\r\n  box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\r\n}\r\n.card .btn:hover {\r\n  background-color: #ffeba7;\r\n  color: #102770;\r\n  box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\r\n}\r\n</style>\r\n"],"mappings":";AAwEA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,IAAG,QAAS,YAAY;AACjC,SAASC,EAAC,IAAKC,MAAK,QAAS,MAAM;AACnC,OAAOC,GAAE,MAAO,QAAQ;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACC,eAAe,CAAC,CAAC;IACtB,IAAI,CAACF,KAAI,GAAI,MAAMN,GAAG,CAACS,UAAU,CAAC,CAAC;EACrC,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB;MACA,MAAMC,IAAG,GAAIf,IAAI,CAACgB,OAAO,CAAC,CAAC;;MAE3B;MACA,IAAI,IAAI,CAACX,YAAW,KAAM,IAAI,CAACC,YAAY,EAAE;QAC3CW,MAAM,CAACC,KAAK,CAAC,uDAAuD,CAAC;QACrE;MACF;;MAEA;MACA,IAAI;QACF,MAAMnB,KAAK,CAACoB,IAAI,CAAC,OAAO,EAAE;UACxBC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAAChB;QACjB,CAAC,CAAC;;QAEF;QACA,MAAMN,KAAK,CAACuB,KAAK,CACf,OAAO,EACP;UACEjB,YAAY,EAAE,IAAI,CAACA,YAAY;UAC/BC,YAAY,EAAE,IAAI,CAACA;QACrB,CAAC,EACD;UACEiB,OAAO,EAAE;YAAEC,aAAa,EAAG,UAAST,IAAI,CAACU,KAAM;UAAE;QACnD,CACF,CAAC;QAEDR,MAAM,CAACC,KAAK,CAAC,gCAAgC,CAAC;QAC9C,IAAI,CAACQ,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC,CAAC;MACrC,EAAE,OAAOC,GAAG,EAAE;QACZ;QACAZ,MAAM,CAACC,KAAK,CAAC,yBAAyB,CAAC;MACzC;IACF,CAAC;IACD,MAAMP,eAAeA,CAAA,EAAG;MACtB,MAAMmB,gBAAe,GAAI5B,MAAM,CAAC,CAAC,CAAC6B,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MACnD,IAAI,CAACxB,OAAM,GAAIuB,gBAAgB;IACjC,CAAC;IACD,MAAME,SAASA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACzB,OAAM,KAAM,IAAI,CAACC,YAAY,EAAE;QACtCS,MAAM,CAACC,KAAK,CAAC,4CAA4C,CAAC;QAC1D;MACF;MAEA,MAAMH,IAAG,GAAIf,IAAI,CAACgB,OAAO,CAAC,CAAC;MAC3B,IAAI;QACF;QACA,KAAK,MAAMG,IAAG,IAAK,IAAI,CAACV,KAAK,EAAE;UAC7B,IAAIU,IAAI,CAACc,MAAK,KAAMlB,IAAI,CAACK,QAAQ,EAAE;YACjC,MAAMjB,GAAG,CAAC+B,UAAU,CAACf,IAAI,CAACgB,GAAG,CAAC;UAChC;QACF;;QAEA;QACA,MAAMC,eAAc,GAAIC,kBAAkB,CAACtB,IAAI,CAACK,QAAQ,CAAC;QAEzD,MAAMG,OAAM,GAAI;UACdC,aAAa,EAAG,UAAST,IAAI,CAACU,KAAM;QACtC,CAAC;;QAED;QACA,MAAMa,QAAO,GAAI,MAAMvC,KAAK,CAACwC,MAAM,CAAE,SAAQH,eAAgB,EAAC,EAAE;UAAEb;QAAQ,CAAC,CAAC;QAE5E,IAAIe,QAAQ,CAAClC,IAAI,CAACoC,OAAO,EAAE;UACzBvB,MAAM,CAACC,KAAK,CAAC,+BAA+B,CAAC;UAC7ClB,IAAI,CAACyC,MAAM,CAAC,CAAC;UACb,IAAI,CAACf,OAAO,CAACgB,EAAE,CAAC,CAAC;QACnB,OAAO;UACLzB,MAAM,CAACC,KAAK,CAAC,2BAA2B,CAAC;QAC3C;MACF,EAAE,OAAOyB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C1B,MAAM,CAACC,KAAK,CAAC,2BAA2B,CAAC;MAC3C;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}